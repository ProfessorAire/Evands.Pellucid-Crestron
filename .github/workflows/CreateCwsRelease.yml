name: CreateCwsRelease

on:
  workflow_dispatch:

jobs:
  getVersions:
    runs-on: self-hosted
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Get Versions
        run: |
          $versions = .\packaging\getVersions.ps1
          $cwsSemVer = $versions[5]
          $preRelease = $versions[7]
          echo "VERSION=$cwsSemVer" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
          echo "PRE=$preRelease" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

    outputs:
      libVer: ${{ env.VERSION }}
      preRelease: ${{ env.PRE }}

  build:
    runs-on: self-hosted
    needs: getVersions
    steps:
      - name: Build Project
        run: |
          .\scripts\buildProject.ps1 -Mode Release
      
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: release-output
          path: |
            .\src\Evands.Pellucid.CwsConsole\bin\Release\Evands.Pellucid.CwsConsole.dll
            .\src\Evands.Pellucid.CwsConsole\bin\Release\Evands.Pellucid.CwsConsole.xml
  
  createPackages:
    runs-on: self-hosted
    needs: [build, getVersions]
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: release-output
          path: .\src\
      
      - name: Create Packages
        run: |
          $lib = .\packaging\createCwsConsolePackage.ps1 ${{ needs.getVersions.outputs.libVer }}
          echo "LIBPATH=$lib" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      
      - name: Upload Package Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package-output
          path: |
            .\packaging\.releases\*.nupkg

  uploadPackages:
    runs-on: self-hosted
    needs: [createPackages, getVersions]
    steps:          
      - name: Download Package Artifacts
        uses: actions/download-artifact@v2
        with:
          name: package-output
          path: .\packaging\.releases\
      
      - name: Push Nuget Packages
        uses: dansiegel/publish-nuget@v1.01
        with:
          filename: 'packaging/.releases/*.nupkg'
          apiKey: ${{ secrets.NUGET_API_KEY }}