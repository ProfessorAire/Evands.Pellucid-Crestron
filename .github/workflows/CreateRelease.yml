name: CreateRelease

on:
  workflow_dispatch:

jobs:
  getVersions:
    runs-on: self-hosted
    steps:
      - name: Get Versions
        run: |
          $versions = .\packaging\getVersions.ps1
          $libSemVer = $versions[0]
          $proSemVer = $versions[2]
          $preRelease = $versions[4]
          echo "VERSION=$libSemVer" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
          echo "PRO_VERSION=$proSemVer" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 Append
          echo "PRE=$preRelease" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

      - name: Check Version Tags
        uses: rickstaa/action-contains-tag@v1
        id: contains_tag
        with:
          reference: "main"
          tag: "v${{ env.VERSION }}"

      - name: Validate Versions
        run: |
          if (${{ steps.contains_tag.outputs.retval }} -eq 'true')
          {
            Write-Error "The tag 'v${{ env.VERSION }}' already exists."
            exit 1
          }

  build:
    runs-on: self-hosted
    needs: getVersions
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Build Project
        run: |
          .\scripts\buildProject.ps1 -Mode Release
      
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: release-output
          path: |
            .\src\Evands.Pellucid\bin\Release\Evands.Pellucid.dll
            .\src\Evands.Pellucid\bin\Release\Evands.Pellucid.xml
            .\src\Evands.Pellucid.Pro\bin\Release\Evands.Pellucid.Pro.dll
            .\src\Evands.Pellucid.Pro\bin\Release\Evands.Pellucid.Pro.xml
            .\src\Evands.Pellucid.ProDemo\bin\Release\Evands.Pellucid.ProDemo.cpz
  
  generateReleases:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: release-output
          path: .\src\
      
      - name: Create Packages
        run: |
          .\packaging\createPackages.ps1 ${{ env.VERSION }} ${{ env.PRO_VERSION }}

      - name: Create Github Release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: "${{ secrets.RELEASE_TOKEN }}"
          automatic_release_tag: "v${{ env.RELEASE }}"
          prerelease: ${{ env.PRE }}
          title: "Evands.Pellucid-Crestron v${{ env.RELEASE }}"
          draft: true
          files: |
            .\packaging\Evands.Pellucid-Crestron-v${{ env.RELEASE }}.zip
      
      - name: Push Nuget Packages
        if: false
        uses: dansiegel/publish-nuget@v2
        with:
          filename: packaging\*.nupkg
          apiKey: ${{ secrets.NUGET_API_KEY }}
